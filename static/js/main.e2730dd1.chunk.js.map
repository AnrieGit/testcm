{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","About","Context","React","createContext","Reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","_ref","delete","_x","_x2","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","bind","float","color","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","NotFound","Test","fetch","then","response","json","console","log","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iPAwCeA,EApCA,SAAAC,GAAS,IACZC,EAAaD,EAAbC,SACR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBACjBJ,GAELC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YACnBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADjB,UAIJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAC9BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADjB,SAIJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YACxBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADjB,gBCvBbI,EAAA,WACX,OACIP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,4ECJNK,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OACrB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAG7C,IAAK,cACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAE5C,IAAK,iBACD,MAAO,CACHA,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAChCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACvBD,EAAUN,EAAOQ,QAClBF,KAGlB,QACI,OAAOP,IAINa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAQ,CACJK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAHlEe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAhD,EAAAiD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAO0BC,IAAMC,IACpB,8CARZ,OAOcN,EAPdE,EAAAK,KAUQ7B,KAAKY,SAAS,CAAEzB,SAAUmC,EAAIQ,OAVtC,wBAAAN,EAAAO,SAAAV,EAAArB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAcQ,OACI9C,EAAAC,EAAAC,cAACM,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OACzBkB,KAAKhC,MAAMgE,cAhB5BrC,EAAA,CAA8BsC,aAsBjBC,EAAWxD,EAAQwD,SC2BjBC,EA1Ef,SAAAvC,GAAA,SAAAuC,IAAA,IAAAtC,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAmC,GAAA,QAAAlC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAkD,IAAA1B,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAQ,CACJsD,iBAAiB,GAFzBtC,EAKIuC,YAAc,WACVvC,EAAKc,SAAS,CAAEwB,iBAAkBtC,EAAKhB,MAAMsD,mBANrDtC,EASIwC,cATJ,eAAAC,EAAAtD,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAhD,EAAAiD,KASoB,SAAAC,EAAO/B,EAAIqB,GAAX,OAAAQ,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACNC,IAAMa,OAAN,8CAAAhD,OAA2DF,IADrD,OAEZqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAFhC,wBAAAkC,EAAAO,SAAAV,MATpB,gBAAAoB,EAAAC,GAAA,OAAAH,EAAA7B,MAAAV,KAAAE,YAAA,GAAAJ,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAkD,EAAAvC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAkD,EAAA,EAAApB,IAAA,SAAAC,MAAA,WAca,IAAA2B,EAAA3C,KAAA4C,EAC8B5C,KAAKhC,MAAMqB,QAAtCC,EADHsD,EACGtD,GAAIuD,EADPD,EACOC,KAAMC,EADbF,EACaE,MAAOC,EADpBH,EACoBG,MACjBX,EAAoBpC,KAAKlB,MAAzBsD,gBACR,OACIlE,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,QACI4E,QAASL,EAAKN,YACdY,MAAO,CAAEC,OAAQ,YAChBL,EAAM,IACP3E,EAAAC,EAAAC,cAAA,KACIC,UAAU,mBACV4E,MAAO,CAAEC,OAAQ,cAIzBhF,EAAAC,EAAAC,cAAA,KACI4E,QAASL,EAAKL,cAAca,KACxBR,EACArD,EACAqB,GAEJtC,UAAU,qBACV4E,MAAO,CACHG,MAAO,QACPF,OAAQ,UACRG,MAAO,aAIfnF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,gBAAAgB,OAAkBF,IACtBpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0B4E,MAAO,CAACC,OAAQ,SAAUE,MAAO,QAASC,MAAO,OAAQC,YAAa,YAGpHlB,EACGlE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UACYyE,GAEZ5E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UACY0E,IAGhB,YA7DhCZ,EAAA,CAA6BF,aCFRsB,mLAEb,OACIrF,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAS,IACE7B,EAAa6B,EAAb7B,SACR,OACIjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqF,SAAP,KACItF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WAA6C,IADjD,QAICc,EAASO,IAAI,SAAAL,GAAO,OACjBnB,EAAAC,EAAAC,cAACqF,EAAD,CAAS1C,IAAK1B,EAAQC,GAAID,QAASA,gBAb7B4C,sCCDhCyB,EAAiB,SAAAnB,GAQjB,IAPFoB,EAOEpB,EAPFoB,MACAd,EAMEN,EANFM,KACA7B,EAKEuB,EALFvB,MACA4C,EAIErB,EAJFqB,YACA5E,EAGEuD,EAHFvD,KACA6E,EAEEtB,EAFFsB,SACAC,EACEvB,EADFuB,MAEA,OACI5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAO2F,QAASlB,GAAOc,GACvBzF,EAAAC,EAAAC,cAAA,SACIC,UAAW2F,IAAW,+BAAgC,CAClDC,aAAcH,IAElB9E,KAAMA,EACN6D,KAAMA,EACNe,YAAaA,EACb5C,MAAOA,EACP6C,SAAUA,IAEbC,GAAS5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoByF,KAezDJ,EAAeQ,aAAe,CAC1BlF,KAAM,QAGK0E,QCvCMS,6MACjBrF,MAAQ,CACJ+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,MAGZC,+CAAW,SAAAhD,EAAOV,EAAU2D,GAAjB,IAAAC,EAAA1B,EAAAC,EAAAC,EAAAyB,EAAAlD,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP4C,EAAEG,iBADKF,EAGwBzE,EAAKhB,MAA5B+D,EAHD0B,EAGC1B,KAAMC,EAHPyB,EAGOzB,MAAOC,EAHdwB,EAGcxB,MAGR,KAATF,EANG,CAAArB,EAAAE,KAAA,eAOH5B,EAAKc,SAAS,CAAEwD,OAAQ,CAAEvB,KAAM,uBAP7BrB,EAAAkD,OAAA,oBAWO,KAAV5B,EAXG,CAAAtB,EAAAE,KAAA,eAYH5B,EAAKc,SAAS,CAAEwD,OAAQ,CAAEtB,MAAO,wBAZ9BtB,EAAAkD,OAAA,oBAgBO,KAAV3B,EAhBG,CAAAvB,EAAAE,KAAA,gBAiBH5B,EAAKc,SAAS,CAAEwD,OAAQ,CAAErB,MAAO,wBAjB9BvB,EAAAkD,OAAA,yBAqBDF,EAAa,CACf3B,OACAC,QACAC,SAxBGvB,EAAAE,KAAA,GA2BWC,IAAMgD,KACpB,6CACAH,GA7BG,QA2BDlD,EA3BCE,EAAAK,KA+BPlB,EAAS,CAAE3B,KAAM,cAAeO,QAAS+B,EAAIQ,OAG7ChC,EAAKc,SAAS,CACViC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,KAIZtE,EAAK9B,MAAM4G,QAAQC,KAAK,KA1CjB,yBAAArD,EAAAO,SAAAV,gEA6CXwC,SAAW,SAAAS,GAAC,OAAIxE,EAAKc,SAAL3B,OAAA6F,EAAA,EAAA7F,CAAA,GAAiBqF,EAAES,OAAOlC,KAAOyB,EAAES,OAAO/D,iFAEjD,IAAA2B,EAAA3C,KAAAgF,EACkChF,KAAKlB,MAApC+D,EADHmC,EACGnC,KAAMC,EADTkC,EACSlC,MAAOC,EADhBiC,EACgBjC,MAAOqB,EADvBY,EACuBZ,OAE5B,OACIlG,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QACIiG,SAAU1B,EAAK0B,SAASlB,KACpBR,EACAhC,IAEJzC,EAAAC,EAAAC,cAAC6G,EAAD,CACItB,MAAM,OACNd,KAAK,OACLe,YAAY,gBACZ5C,MAAO6B,EACPgB,SAAUlB,EAAKkB,SACfC,MAAOM,EAAOvB,OAElB3E,EAAAC,EAAAC,cAAC6G,EAAD,CACItB,MAAM,QACNd,KAAK,QACL7D,KAAK,QACL4E,YAAY,iBACZ5C,MAAO8B,EACPe,SAAUlB,EAAKkB,SACfC,MAAOM,EAAOtB,QAElB5E,EAAAC,EAAAC,cAAC6G,EAAD,CACItB,MAAM,QACNd,KAAK,QACLe,YAAY,iBACZ5C,MAAO+B,EACPc,SAAUlB,EAAKkB,SACfC,MAAOM,EAAOrB,QAElB7E,EAAAC,EAAAC,cAAA,SACIY,KAAK,SACLgC,MAAM,cACN3C,UAAU,yCAnGV4D,aCAnBiD,6MACjBpG,MAAQ,CACJ+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,MAiBZC,+CAAW,SAAAhD,EAAOV,EAAU2D,GAAjB,IAAAC,EAAA1B,EAAAC,EAAAC,EAAAoC,EAAA7F,EAAAgC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP4C,EAAEG,iBADKF,EAGwBzE,EAAKhB,MAA5B+D,EAHD0B,EAGC1B,KAAMC,EAHPyB,EAGOzB,MAAOC,EAHdwB,EAGcxB,MAGR,KAATF,EANG,CAAArB,EAAAE,KAAA,eAOH5B,EAAKc,SAAS,CAAEwD,OAAQ,CAAEvB,KAAM,uBAP7BrB,EAAAkD,OAAA,oBAWO,KAAV5B,EAXG,CAAAtB,EAAAE,KAAA,eAYH5B,EAAKc,SAAS,CAAEwD,OAAQ,CAAEtB,MAAO,wBAZ9BtB,EAAAkD,OAAA,oBAgBO,KAAV3B,EAhBG,CAAAvB,EAAAE,KAAA,gBAiBH5B,EAAKc,SAAS,CAAEwD,OAAQ,CAAErB,MAAO,wBAjB9BvB,EAAAkD,OAAA,yBAqBDS,EAAgB,CAClBtC,OACAC,QACAC,SAGIzD,EAAOQ,EAAK9B,MAAMoH,MAAMC,OAAxB/F,GA3BDkC,EAAAE,KAAA,GA6BWC,IAAM2D,IAAN,8CAAA9F,OACgCF,GAC9C6F,GA/BG,QA6BD7D,EA7BCE,EAAAK,KAkCPlB,EAAS,CAAE3B,KAAM,iBAAkBO,QAAS+B,EAAIQ,OAGhDhC,EAAKc,SAAS,CACViC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPqB,OAAQ,KAIZtE,EAAK9B,MAAM4G,QAAQC,KAAK,KA7CjB,yBAAArD,EAAAO,SAAAV,gEAgDXwC,SAAW,SAAAS,GAAC,OAAIxE,EAAKc,SAAL3B,OAAA6F,EAAA,EAAA7F,CAAA,GAAiBqF,EAAES,OAAOlC,KAAOyB,EAAES,OAAO/D,qNA7D9C1B,EAAOU,KAAKhC,MAAMoH,MAAMC,OAAxB/F,YACUqC,IAAMC,IAAN,8CAAApC,OACgCF,WAD5CgC,SAGAjC,EAAUiC,EAAIQ,KAEpB9B,KAAKY,SAAS,CACViC,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IAsDd,IAAAJ,EAAA3C,KAAAgF,EACkChF,KAAKlB,MAApC+D,EADHmC,EACGnC,KAAMC,EADTkC,EACSlC,MAAOC,EADhBiC,EACgBjC,MAAOqB,EADvBY,EACuBZ,OAE5B,OACIlG,EAAAC,EAAAC,cAAC8D,EAAD,KACK,SAAAlB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QACIiG,SAAU1B,EAAK0B,SAASlB,KACpBR,EACAhC,IAEJzC,EAAAC,EAAAC,cAAC6G,EAAD,CACItB,MAAM,OACNd,KAAK,OACLe,YAAY,gBACZ5C,MAAO6B,EACPgB,SAAUlB,EAAKkB,SACfC,MAAOM,EAAOvB,OAElB3E,EAAAC,EAAAC,cAAC6G,EAAD,CACItB,MAAM,QACNd,KAAK,QACL7D,KAAK,QACL4E,YAAY,iBACZ5C,MAAO8B,EACPe,SAAUlB,EAAKkB,SACfC,MAAOM,EAAOtB,QAElB5E,EAAAC,EAAAC,cAAC6G,EAAD,CACItB,MAAM,QACNd,KAAK,QACLe,YAAY,iBACZ5C,MAAO+B,EACPc,SAAUlB,EAAKkB,SACfC,MAAOM,EAAOrB,QAElB7E,EAAAC,EAAAC,cAAA,SACIY,KAAK,SACLgC,MAAM,iBACN3C,UAAU,yCApHT4D,aCJ1B,SAASsD,IACpB,OACIrH,EAAAC,EAAAC,cAACF,EAAAC,EAAMqF,SAAP,KACItF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,uBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,0CCJSmH,8LAEbC,MAAM,gDACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIC,QAAQC,IAAIF,sCAI9B,OACI1H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BAVkB6D,aC2CnB8D,gMA5BP,OACI7H,EAAAC,EAAAC,cAAC4H,EAAD,KACI9H,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC6H,EAAD,CAAQhI,SAAS,oBACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACIhI,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjCrF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CACIE,KAAK,eACLC,UAAWlC,IAEfjG,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CACIE,KAAK,oBACLC,UAAWnB,IAEfhH,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW5H,IAChCP,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWb,IAC/BtH,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOG,UAAWd,gBApBhCtD,cCHEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCbNsB,IAASC,OAAOzI,EAAAC,EAAAC,cAACwI,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.e2730dd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className='navbar navbar-expand sm navbar-dark bg-danger mb-3 py-0'>\r\n            <div className='container'>\r\n                <a href='/' className='navbar-brand'>\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className='navbar-nav mr-auto'>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-link'>\r\n                                <i className='fas fa-home' /> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/contact/add' className='nav-link'>\r\n                                <i className='fas fa-plus' /> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/about' className='nav-link'>\r\n                                <i className='fas fa-question' /> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>About Contact Manager</h1>\r\n            <p className='lead'>Simple app to manage contacts</p>\r\n            <p className='text-secondary'>Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => Reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\r\n            'https://jsonplaceholder.typicode.com/users'\r\n        );\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nexport class Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo });\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card card-body mb-3'>\r\n                            <h4>\r\n                                <span\r\n                                    onClick={this.onShowClick}\r\n                                    style={{ cursor: 'pointer' }}>\r\n                                    {name}{' '}\r\n                                    <i\r\n                                        className='fas fa-sort-down'\r\n                                        style={{ cursor: 'pointer' }}\r\n                                    />\r\n                                </span>\r\n\r\n                                <i\r\n                                    onClick={this.onDeleteClick.bind(\r\n                                        this,\r\n                                        id,\r\n                                        dispatch\r\n                                    )}\r\n                                    className='fas fa-trash fa-sm'\r\n                                    style={{\r\n                                        float: 'right',\r\n                                        cursor: 'pointer',\r\n                                        color: '#ff0000'\r\n                                    }}\r\n                                />\r\n\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className='fas fa-pencil-alt fa-sm' style={{cursor: 'ponter', float: 'right', color: '#000', marginRight: '1rem'}} />\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className='list-group'>\r\n                                    <li className='list-group-item'>\r\n                                        Email: {email}\r\n                                    </li>\r\n                                    <li className='list-group-item'>\r\n                                        Phone: {phone}\r\n                                    </li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nexport default class Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className='display-4 text-center mb-4'>\r\n                                <span className='text-danger'>Contact</span>{' '}\r\n                                List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                type={type}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className='invalid-feedback'>{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nexport default class AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for error in form\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required.' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required.' } });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required.' } });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post(\r\n            'https://jsonplaceholder.typicode.com/users',\r\n            newContact\r\n        );\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        // Clear the text box after submit the form\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        // Redirect to home page after submit the form\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>Add Contact</div>\r\n                            <div className='card-body'>\r\n                                <form\r\n                                    onSubmit={this.onSubmit.bind(\r\n                                        this,\r\n                                        dispatch\r\n                                    )}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name='name'\r\n                                        placeholder='Enter name...'\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name='email'\r\n                                        type='email'\r\n                                        placeholder='Enter email...'\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name='phone'\r\n                                        placeholder='Enter phone...'\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type='submit'\r\n                                        value='Add Contact'\r\n                                        className='btn btn-block btn-danger'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nexport default class EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for error in form\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required.' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required.' } });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required.' } });\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            updateContact\r\n        );\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        // Clear the text box after submit the form\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        // Redirect to home page after submit the form\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>Edit Contact</div>\r\n                            <div className='card-body'>\r\n                                <form\r\n                                    onSubmit={this.onSubmit.bind(\r\n                                        this,\r\n                                        dispatch\r\n                                    )}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name='name'\r\n                                        placeholder='Enter name...'\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name='email'\r\n                                        type='email'\r\n                                        placeholder='Enter email...'\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name='phone'\r\n                                        placeholder='Enter phone...'\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type='submit'\r\n                                        value='Update Contact'\r\n                                        className='btn btn-block btn-danger'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1 className='display-4 text-center'>404 Page Not Found.</h1>\r\n            <p className='lead text-center'>\r\n                Sorry, that page does not exists.\r\n            </p>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Test extends Component {\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(json => console.log(json));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Test page</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className='App'>\n                        <Header branding='Contact Manager' />\n                        <div className='container'>\n                            <Switch>\n                                <Route exact path='/' component={Contacts} />\n                                <Route\n                                    path='/contact/add'\n                                    component={AddContact}\n                                />\n                                <Route\n                                    path='/contact/edit/:id'\n                                    component={EditContact}\n                                />\n                                <Route path='/about' component={About} />\n                                <Route path='/test' component={Test} />\n                                <Route component={NotFound} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}